{"version":3,"sources":["components/Section/Section.module.css","components/Contact/ContactsFilter.module.css","App.module.css","components/Form/Form.module.css","components/Contact/Contact.module.css","components/Section/Section.js","components/Form/Form.js","components/Contact/Contact.js","components/Contact/ContactsFilter.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","container","Form","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","reset","this","form","label","type","onChange","pattern","required","input","button","Component","Contact","contacts","onDelete","list","map","id","item","text","onClick","ContactsFilter","App","arrContacts","filter","addContact","contact","shortid","generate","find","alert","removeContact","contactId","prevState","changeFilter","filterContacts","normalizedFilter","toLowerCase","includes","sort","a","b","localeCompare","contactsSave","localStorage","getItem","parseContacts","JSON","parse","setItem","stringify","visibleContacts","ReactDom","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0dc6f9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__38rDr\",\"title\":\"Section_title__3nQ6Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactsFilter_label__2z2G2\",\"input\":\"ContactsFilter_input__1TiBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__17M3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__15toN\",\"label\":\"Form_label__3EHKq\",\"input\":\"Form_input__fkQ54\",\"button\":\"Form_button__1mWjy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contact_list__q08pp\",\"text\":\"Contact_text__2U3xQ\",\"button\":\"Contact_button__2t2b-\"};","import PropTypes from 'prop-types';\n\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <div className={s.container}>\n    <h2 className={s.title}>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { Component } from 'react';\n\nimport s from './Form.module.css';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = (e) => {\n    // const { name, value } = e.target;\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            className={s.input}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            className={s.input}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\n\nconst Contact = ({ contacts, onDelete }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <span className={s.text}>{name}:</span>\n          <span className={s.text}>{number}</span>\n\n          <button\n            onClick={() => {\n              onDelete(id);\n            }}\n            type=\"button\"\n            className={s.button}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContact.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape).isRequired,\n};\n\nexport default Contact;\n","import PropTypes from 'prop-types';\nimport s from './ContactsFilter.module.css';\n\nconst ContactsFilter = ({ value, onChange }) => {\n  return (\n    <label className={s.label}>\n      Filter contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        className={s.input}\n      />\n    </label>\n  );\n};\n\nContactsFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ContactsFilter;\n","import { Component } from 'react';\nimport shortid from 'shortid';\n\nimport Section from './components/Section';\nimport Form from './components/Form';\nimport { Contact, ContactsFilter } from './components/Contact';\n\nimport arrContacts from './data/contacts.json';\n\nimport s from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: arrContacts,\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contactsSave = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contactsSave);\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    contacts.find((contact) => contact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [contact, ...contacts],\n        }));\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId,\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts\n      .filter((contact) =>\n        contact.name.toLowerCase().includes(normalizedFilter),\n      )\n      .sort((a, b) => a.name.localeCompare(b.name));\n  };\n\n  render() {\n    // const { contacts } = this.state;\n    const { filter } = this.state;\n    const visibleContacts = this.filterContacts();\n    return (\n      <>\n        <Section title={'Phonebook'}>\n          <Form onSubmit={this.addContact} />\n        </Section>\n\n        <Section title={'Contacts'}>\n          <div className={s.container}>\n            <ContactsFilter value={filter} onChange={this.changeFilter} />\n            <Contact contacts={visibleContacts} onDelete={this.removeContact} />\n          </div>\n        </Section>\n      </>\n    );\n  }\n}\nexport default App;\n","import ReactDom from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport React from 'react';\r\n\r\nReactDom.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}